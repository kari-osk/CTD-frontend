{"ast":null,"code":"var _jsxFileName = \"C:\\\\Git\\\\CTD-frontend\\\\ctd-esp-front2-aula20-testing-rtk-query-base-main\\\\src\\\\features\\\\characters\\\\characters.component.tsx\",\n    _s = $RefreshSig$();\n\nimport CharacterGrid from './characters.styles';\nimport { useGetCharactersQuery } from 'features/characters/characters.endpoints';\nimport { CharacterCardComponent } from 'features/characters/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CharactersComponent = _ref => {\n  _s();\n\n  let {\n    ids\n  } = _ref;\n  const {\n    data: characters,\n    error,\n    isLoading\n  } = useGetCharactersQuery({\n    ids\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading characters...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 25\n  }, this);\n  if (error || !characters) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error when loading. Please try again later.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 36\n  }, this);\n  const character = !Array.isArray(characters) ? characters : undefined;\n  return /*#__PURE__*/_jsxDEV(CharacterGrid, {\n    children: [Array.isArray(characters) && characters.map(character => /*#__PURE__*/_jsxDEV(CharacterCardComponent, {\n      character: character\n    }, character.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)), character && /*#__PURE__*/_jsxDEV(CharacterCardComponent, {\n      character: character\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CharactersComponent, \"Y8FDX3cwyWA7shaHZDkFDCKRC4A=\", false, function () {\n  return [useGetCharactersQuery];\n});\n\n_c = CharactersComponent;\nexport default CharactersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharactersComponent\");","map":{"version":3,"names":["CharacterGrid","useGetCharactersQuery","CharacterCardComponent","CharactersComponent","ids","data","characters","error","isLoading","character","Array","isArray","undefined","map","id"],"sources":["C:/Git/CTD-frontend/ctd-esp-front2-aula20-testing-rtk-query-base-main/src/features/characters/characters.component.tsx"],"sourcesContent":["import { FC } from 'react';\nimport CharacterGrid from './characters.styles';\nimport { useGetCharactersQuery } from 'features/characters/characters.endpoints';\nimport { CharacterCardComponent } from 'features/characters/card';\n\nexport type CharactersComponentProps = {\n  ids: number[];\n};\n\nconst CharactersComponent: FC<CharactersComponentProps> = ({ ids }: CharactersComponentProps) => {\n  const { data: characters, error, isLoading } = useGetCharactersQuery({ ids });\n\n  if (isLoading) return <div>Loading characters...</div>;\n  if (error || !characters) return <div>Error when loading. Please try again later.</div>;\n  const character = !Array.isArray(characters) ? characters : undefined;\n\n  return (\n    <CharacterGrid>\n      {Array.isArray(characters) &&\n        characters.map((character) => (\n          <CharacterCardComponent character={character} key={character.id} />\n        ))}\n      {character && <CharacterCardComponent character={character} />}\n    </CharacterGrid>\n  );\n};\n\nexport default CharactersComponent;\n"],"mappings":";;;AACA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,SAASC,qBAAT,QAAsC,0CAAtC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;;;AAMA,MAAMC,mBAAiD,GAAG,QAAuC;EAAA;;EAAA,IAAtC;IAAEC;EAAF,CAAsC;EAC/F,MAAM;IAAEC,IAAI,EAAEC,UAAR;IAAoBC,KAApB;IAA2BC;EAA3B,IAAyCP,qBAAqB,CAAC;IAAEG;EAAF,CAAD,CAApE;EAEA,IAAII,SAAJ,EAAe,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACf,IAAID,KAAK,IAAI,CAACD,UAAd,EAA0B,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAC1B,MAAMG,SAAS,GAAG,CAACC,KAAK,CAACC,OAAN,CAAcL,UAAd,CAAD,GAA6BA,UAA7B,GAA0CM,SAA5D;EAEA,oBACE,QAAC,aAAD;IAAA,WACGF,KAAK,CAACC,OAAN,CAAcL,UAAd,KACCA,UAAU,CAACO,GAAX,CAAgBJ,SAAD,iBACb,QAAC,sBAAD;MAAwB,SAAS,EAAEA;IAAnC,GAAmDA,SAAS,CAACK,EAA7D;MAAA;MAAA;MAAA;IAAA,QADF,CAFJ,EAKGL,SAAS,iBAAI,QAAC,sBAAD;MAAwB,SAAS,EAAEA;IAAnC;MAAA;MAAA;MAAA;IAAA,QALhB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAhBD;;GAAMN,mB;UAC2CF,qB;;;KAD3CE,mB;AAkBN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}